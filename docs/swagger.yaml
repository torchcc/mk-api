definitions:
  middleware.Response:
    properties:
      data:
        type: object
      ecode:
        type: integer
      emsg:
        type: string
    type: object
  model.User:
    properties:
      address:
        type: string
      avatar_url:
        type: string
      gender:
        type: string
      id:
        type: integer
      mobile:
        type: string
      open_id:
        type: string
      user_name:
        type: string
    type: object
info:
  contact: {}
  license: {}
paths:
  /:
    get:
      consumes:
      - application/json
      description: get a single user's info
      parameters:
      - description: 时间戳
        in: query
        name: timestamp
        required: true
        type: string
      - description: 签名
        in: query
        name: signature
        required: true
        type: string
      - description: NONCE
        in: query
        name: nonce
        required: true
        type: string
      - description: 回响字符串
        in: query
        name: echostr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get wechat
      tags:
      - WechatTag
  /users:
    get:
      consumes:
      - application/json
      description: Get all the existing users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middleware.Response'
      summary: List existing users
      tags:
      - users
      - list
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: Create user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middleware.Response'
      summary: Create new users
      tags:
      - users
      - create
  /users/{id}:
    get:
      consumes:
      - application/json
      description: get a single user's info
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.Response'
      summary: Get users
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a single user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middleware.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middleware.Response'
      summary: Update users
      tags:
      - users
swagger: "2.0"
